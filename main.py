import asyncio
import json
import requests
from currency_converter import CurrencyConverter
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext, Dispatcher
from aiogram.dispatcher.filters.state import StatesGroup, State
from aiogram import Bot, types
from aiogram.utils import executor

TOKEN = 'YOUR TOKEN'
URL = 'http://data.fixer.io/api/latest?access_key=7370ff2962d49abefc56c32f5bc74aa8'  # —Å—Å—ã–ª–∫–∞ API –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
APPID = '8266ef4bef0f1cc50f61f1126da6acd0'
CATS_URL = 'https://api.thecatapi.com/v1/images/search'  # —Å—Å—ã–ª–∫–∞ API –¥–ª—è –∫–æ—Ç–∏–∫–æ–≤
# DOGS_URL = 'https://api.thedogapi.com/v1/images/search' #—Å—Å—ã–ª–∫–∞ API –¥–ª—è —Å–æ–±–∞—á–µ–∫

bot = Bot(token=TOKEN)
storage = MemoryStorage()
c = CurrencyConverter()
dp = Dispatcher(bot, storage=storage)

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
global user_money
global user_question

# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞
back = types.ReplyKeyboardMarkup(resize_keyboard=True)
item1 = types.KeyboardButton("–ù–∞–∑–∞–¥ –∫ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—É‚Ü©")
back.add(item1)


# –ö–ª–∞—Å—Å –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö
class ProfileStatesGroup(StatesGroup):
    city = State()
    money = State()
    fromm = State()
    to = State()
    question = State()
    answers = State()


# –°—Ç–∞—Ä—Ç –¥–∏–∞–ª–æ–≥–∞
@dp.message_handler(commands=['start'])
async def welcome(message: types.Message):
    # –ö–Ω–æ–ø–∫–∏
    print(message.chat.id)
    # –ü–µ—Ä–µ–Ω–µ—Å–µ—Ç –≤ –º–µ–Ω—é
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª")
    markup.add(item1)
    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    await bot.send_message(message.chat.id,
                           "<strong>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, {first}</strong>\n\n"
                           "–Ø - —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –º–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç\n\n"
                           "–ë–ª–∞–≥–æ–¥–∞—Ä—è –º–Ω–µ —É—á–∏—Ç—ã–≤–∞—é—Ç—Å—è —Å –ø–æ–º–æ—â—å—é –æ–ø—Ä–æ—Å–∞ –º–Ω–µ–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ!\n\n"
                           "–ú–∏–ª—ã–µ –∫–æ—Ç–∏–∫–∏ –Ω–µ –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –≤–Ω–∏–º–∞–Ω–∏—è\n\n"
                           "–ë—É–¥–µ—à—å –≤–∫—É—Ä—Å–µ –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π –∏ –≤—Å–µ–≥–¥–∞ –æ–¥–µ–≤–∞—Ç—å—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ!\n\n"
                           "–ò –≥–ª–∞–≤–Ω–æ–µ —Ç—ã —Å–º–æ–∂–µ—à—å –≤—Å–µ–≥–¥–∞ –æ—Å—Ç–∞—Ç—å—Å—è –≤ –ø–ª—é—Å–µ —Å —Ç–æ—á–Ω—ã–º –∫–æ–Ω–≤–µ—Ä—Ç–æ—Ä–æ–º –≤–∞–ª—é—Ç\n\n"
                           "–ü–µ—Ä–µ–π–¥–∏ –≤ –º–µ–Ω—é —Ñ—É–Ω–∫—Ü–∏–π –∏ —É–±–µ–¥–∏—Å—å –≤ —ç—Ç–æ —Å–∞–º".format(
                               first=message.from_user.first_name),
                           reply_markup=markup,
                           parse_mode='html'
                           )


# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–∞
@dp.message_handler(content_types=['text'])
async def home(message: types.Message):
    # –û—Ç–≤–µ—Ç–Ω–æ–µ —Å–º—Å –Ω–∞ "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª" –∏ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é
    if message.text == '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª' or message.text == '–ù–∞–∑–∞–¥ –∫ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—É‚Ü©':
        information_table = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton("–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—Éüå°")
        item2 = types.KeyboardButton("–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞–ª—é—Ç—Éüí≤")
        item3 = types.KeyboardButton("–ü–æ–ª—É—á–∏—Ç—å —Ñ–æ—Ç–æ –∫–æ—Ç–∏–∫–∞ü¶Å")
        item4 = types.KeyboardButton("–°–æ–∑–¥–∞—Ç—å –æ–ø—Ä–æ—Å")
        information_table.add(item1, item2, item3, item4)
        await bot.send_message(message.chat.id,
                               "<strong>–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª</strong>\n\n"
                               "‚òîüå°–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å —Ç–µ–∫—É—â—É—é –ø–æ–≥–æ–¥—É –≤ —Å–≤–æ–µ–º –≥–æ—Ä–æ–¥–µ‚òîüå°\n\n"
                               "üí≤–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞–ª—é—Ç—Éüí≤\n\n"
                               "üê±–ü–æ–ª—É—á–∏—Ç—å –º–∏–ª—É—é —Ñ–æ—Ç–æ—á–∫—É –∫–æ—Ç–∏–∫–∞\n\n"
                               "üë®‚Äçüë®‚Äçüë¶–°–æ–∑–¥–∞–≤–∞—Ç—å –æ–ø—Ä–æ—Åüë®‚Äçüë®‚Äçüë¶\n\n".format(
                                   first=message.from_user.first_name),
                               reply_markup=information_table,
                               parse_mode='html'
                               )
    # –û–±—Ä–∞–±–æ—Ç–∞–µ—Ç –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–ø–∏—à–µ—Ç "–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—Éüå°"
    if message.text == '–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—Éüå°':
        await bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–≤–æ–µ–≥–æ –≥–æ—Ä–æ–¥–∞ (–ú–æ—Å–∫–≤–∞, –£—Ñ–∞, –ß–µ–ª—è–±–∏–Ω—Å–∫)')
        # –ü–µ—Ä–µ–Ω–µ—Å–µ—Ç —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ñ—É–Ω–∫—Ü–∏—é "city"
        await ProfileStatesGroup.city.set()

    # –û–±—Ä–∞–±–æ—Ç–∞–µ—Ç –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–ø–∏—à–µ—Ç "–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞–ª—é—Ç—Éüí≤"
    if message.text == '–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞–ª—é—Ç—Éüí≤':
        await bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ —Å—É–º–º—É –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏—è')
        # –ü–µ—Ä–µ–Ω–µ—Å–µ—Ç —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ñ—É–Ω–∫—Ü–∏—é "money"
        await ProfileStatesGroup.money.set()

    # –û–±—Ä–∞–±–æ—Ç–∞–µ—Ç –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–ø–∏—à–µ—Ç "–ü–æ–ª—É—á–∏—Ç—å —Ñ–æ—Ç–æ –∫–æ—Ç–∏–∫–∞ü¶Å"
    if message.text == '–ü–æ–ª—É—á–∏—Ç—å —Ñ–æ—Ç–æ –∫–æ—Ç–∏–∫–∞ü¶Å':
        response = requests.get(CATS_URL)  # –∑–∞–ø—Ä–æ—Å
        response = response.json()  # –ø–µ—Ä–µ–≤–æ–¥ –≤ json()
        print(response)  # –≤—ã–≤–æ–¥ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥—è—â–µ–≥–æ
        random_cat = response[0].get('url')  # —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∏ –≤—ã–±–æ—Ä —Ç–æ–ª—å–∫–æ —Å—Å—ã–ª–∫–∏
        await bot.send_message(message.chat.id, f'{random_cat}')  # –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å—Å—ã–ª–∫–∏

    # –û–±—Ä–∞–±–æ—Ç–∞–µ—Ç –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–ø–∏—à–µ—Ç "–°–æ–∑–¥–∞—Ç—å –æ–ø—Ä–æ—Å"
    if message.text == '–°–æ–∑–¥–∞—Ç—å –æ–ø—Ä–æ—Å':
        await bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –≤–æ–ø—Ä–æ—Å –¥–ª—è –æ–ø—Ä–æ—Å–∞')
        # –ü–µ—Ä–µ–Ω–µ—Å–µ—Ç —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ñ—É–Ω–∫—Ü–∏—é "question"
        await ProfileStatesGroup.question.set()


# –°—é–¥–∞ –ø–µ—Ä–µ–Ω–µ—Å–ª–∏—Å—å –ø–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –≤–≤–µ–ª–∏ "–°–æ–∑–¥–∞—Ç—å –æ–ø—Ä–æ—Å"
@dp.message_handler(state=ProfileStatesGroup.question)
async def load_digit(message: types.Message) -> None:
    global user_question  # –ì–ª–æ–±–∞–ª—å–Ω–∞—è —á—Ç–æ–± –≤ —Å–ª–µ–¥ —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–∂–Ω–æ –±—ã–ª–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –≤–º–µ—Å—Ç–æ –≤–æ–ø—Ä–æ—Å–∞ —á–∏—Å–ª–æ
    try:  # –í —Å–ª—É—á–∞–∏ —É—Å–ø–µ—Ö–∞ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç
        user_question = str(message.text)
        await bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–∞\n\n'
                                                '–ü—Ä–∏–º–µ—Ä: (–î–∞, –Ω–µ—Ç, –≤–æ–∑–º–æ–∂–Ω–æ)')
        # –ü–µ—Ä–µ–Ω–æ—Å–∏–º—Å—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–æ–≤ –≤ –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é
        await ProfileStatesGroup.answers.set()
    except ValueError:  # –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –≤–≤–æ–¥–∞
        await bot.send_message(message.chat.id, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥!\n\n'
                                                '–í–æ–∑–º–æ–∂–Ω–æ —Ç—ã –≤–≤–µ–ª —Ü–∏—Ñ—Ä—ã')
        await ProfileStatesGroup.answers.set()


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–æ–≤ –∏ –æ–ø—Ä–æ—Å–∞ –≤ —Ü–µ–ª–æ–º
@dp.message_handler(state=ProfileStatesGroup.answers)
async def load_digit(message: types.Message, state: FSMContext) -> None:
    global user_question  # –°–¥–µ–ª–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –ø–æ–≤—Ç–æ—Ä –¥–ª—è –ø–æ–¥—Å—Ç—Ä–∞—Ö–æ–≤–∫–∏
    user_answers = list(map(str, message.text.split(', ')))  # —Ä–∞–∑–æ–±—å–µ–º —Ç–æ —á—Ç–æ –≤–≤–µ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é
    json_str_1 = json.dumps(user_answers)  # –ø–µ—Ä–µ–¥–µ–ª–∞–µ–º –≤ json (—Ç–µ–ª–µ–≥—Ä–∞–º–º —Å–æ–∑–¥–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ json)
    print("\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª:", json_str_1)  # –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥—è—â–µ–≥–æ

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –µ—Å–ª–∏ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º–µ API –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç –æ—à–∏–±–∫–∞ (–≤–≤–µ–ª —Ü–∏—Ñ—Ä—ã, –∏–ª–∏ –Ω–µ —Ç–∞–∫ –∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ)
    try:  # –í —Å–ª—É—á–∞–∏ —É—Å–ø–µ—Ö–∞
        base_url = f"https://api.telegram.org/bot{TOKEN}/sendPoll"  # –°—Å—ã–ª–∫–∞ API

        parameters = {  # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
            "chat_id": f"{message.chat.id}",
            "question": f"{user_question}",
            "options": json_str_1,
            'is_anonymous': False,
        }
        await bot.send_message(message.chat.id, '–û–ø—Ä–æ—Å —Å–æ–∑–¥–∞–µ—Ç—Å—è...',
                               reply_markup=back)  # –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é
        resp = requests.get(base_url, data=parameters)  # –∑–∞–ø—Ä–æ—Å
        print(resp.raise_for_status())  # –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
        await state.finish()  # –∑–∞–≤–µ—Ä—à–∏–º —á—Ç–æ–± –º–æ–∂–Ω–æ –±—ã–ª–æ –≤—ã–π—Ç–∏ –≤ –º–µ–Ω—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞
    # –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞
    except (
            requests.exceptions.HTTPError, requests.exceptions.ConnectionError,
            requests.exceptions.ConnectTimeout) as err:  # –í–∏–¥—ã –æ—à–∏–±–æ–∫
        print(err)
        await bot.send_message(message.chat.id, f'–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ –∑–∞–Ω–æ–≤–æ\n\n'
                                                f'–ü–æ–ø—Ä–æ–±—É–π –Ω–∞–ø–∏—Å–∞—Ç—å –∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ (—Å —É—á–µ—Ç–æ–º –ø—Ä–æ–±–µ–ª–æ–≤)',
                               reply_markup=back)
        await state.finish()


# –°—é–¥–∞ –ø–µ—Ä–µ–Ω–µ—Å–ª–∏—Å—å –ø–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –≤–≤–µ–ª–∏ "–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞–ª—é—Ç—É"
@dp.message_handler(state=ProfileStatesGroup.money)
async def load_digit(message: types.Message) -> None:
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ (–µ—Å–ª–∏ –≤–≤–µ–ª –Ω–µ —á–∏—Å–ª–æ)
    try:
        global user_money  # –ü–æ–≤—Ç–æ—Ä –ª–æ–∫–∞–ª—å–Ω–æ
        user_money = int(message.text)  # –ø–µ—Ä–µ–≤–µ–¥–µ–º –≤ int
        if user_money > 0:  # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ —Ç–æ —á—Ç–æ <= 0
            print('user –≤–≤–µ–ª —Å—É–º–º—É: ', user_money)  # –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
            await bot.send_message(message.chat.id, '–ò–∑ –∫–∞–∫–æ–π –≤–∞–ª—é—Ç—ã —Ç—ã —Ö–æ—á–µ—à—å –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å? (RUB, USD, EUR)')
            # –ø–µ—Ä–µ–Ω–µ—Å–µ–º—Å—è –≤ —Ñ—É–Ω–∫—Ü–∏—é –≥–¥–µ —É–∫–∞–∑—ã–≤–∞–µ–º –∏–∑ –∫–∞–∫–æ–π –≤–∞–ª—é—Ç—É –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º
            await ProfileStatesGroup.fromm.set()
        else:
            await bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ 0!')
            # –í–æ–∑–≤—Ä–∞—Ç –æ–±—Ä–∞—Ç–Ω–æ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –≤–≤–æ–¥–∞
            await ProfileStatesGroup.money.set()
    # –í —Å–ª—É—á–∞–∏ –æ—à–∏–±–æ–∫
    except ValueError:
        await bot.send_message(message.chat.id, '–í—ã –≤–≤–µ–ª–∏ –Ω–µ —Ü–∏—Ñ—Ä—ã, –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É')
        await ProfileStatesGroup.money.set()
    except KeyError:
        await bot.send_message(message.chat.id, '–í—ã –≤–≤–µ–ª–∏ –Ω–µ —Ü–∏—Ñ—Ä—ã, –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É')
        await ProfileStatesGroup.money.set()


# –ú–µ—Å—Ç–æ –≥–¥–µ —É–∫–∞–∑—ã–≤–∞–µ–º –∏–∑ –∫–∞–∫–æ–π –≤–∞–ª—é—Ç—ã
@dp.message_handler(state=ProfileStatesGroup.fromm)
async def load_digit(message: types.Message) -> None:
    global user_from_money  # –ü–æ–≤—Ç–æ—Ä
    user_from_money = message.text.upper()  # –ø–µ—Ä–µ–≤–µ–¥–µ–º –≤ –≤–µ—Ä—Ö–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä
    await bot.send_message(message.chat.id, '–í –∫–∞–∫—É—é –≤–∞–ª—é—Ç—É —Ç—ã —Ö–æ—á–µ—à—å –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å? (RUB, USD, EUR)')
    # –ü–µ—Ä–µ—Ö–æ–¥ –≤–º–µ—Å—Ç–æ –≥–¥–µ —É–∫–∞–∂–µ–º –≤ –∫–∞–∫—É—é –≤–∞–ª—é—Ç—É
    await ProfileStatesGroup.to.set()


# –ú–µ—Å—Ç–æ –≥–¥–µ —É–∫–∞–∑—ã–≤–∞–µ–º –≤ –∫–∞–∫—É—é –≤–∞–ª—é—Ç—É –∏ –≤—ã–¥–∞–µ–º —Å—Ä–∞–∑—É –æ—Ç–≤–µ—Ç
@dp.message_handler(state=ProfileStatesGroup.to)
async def load_digit(message: types.Message, state: FSMContext) -> None:
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –µ—Å–ª–∏ –≤–≤–µ–ª —Ü–∏—Ñ—Ä—ã –∏–ª–∏ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –≤–∞–ª—é—Ç—É
    try:  # –í —Å–ª—É—á–∞–∏ —É—Å–ø–µ—Ö–∞
        to_currency = message.text.upper()  # –ø–µ—Ä–µ–≤–µ–¥–µ–º –≤ –≤–µ—Ä—Ö–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä
        response = requests.get(URL)  # –ó–∞–ø—Ä–æ—Å –ø–æ API
        rate = response.json()['rates'][user_from_money]
        amount_in = user_money / rate
        amount = amount_in * (response.json()['rates'][to_currency])
        amount = round(amount, 1)  # –ö–æ–ª-–≤–∞ —á–∏—Å–µ–ª –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π
        await bot.send_message(message.chat.id, f'–ü–æ–ª—É—á–∏–ª–æ—Å—å: {amount}', reply_markup=back)
        await state.finish()
    # –í —Å–ª—É—á–∞–∏ –æ—à–∏–±–æ–∫
    except KeyError:
        await bot.send_message(message.chat.id, f'–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ –∑–∞–Ω–æ–≤–æ\n\n'
                                                f'–ü–æ–ø—Ä–æ–±—É–π –Ω–∞–ø–∏—Å–∞—Ç—å –∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ;)', reply_markup=back)
        await state.finish()


# –ú–µ—Å—Ç–æ –∫—É–¥–∞ –º—ã –ø–µ—Ä–µ–Ω–µ—Å–ª–∏—Å—å –ø–æ—Å–ª–µ —Å–º—Å "–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É"
@dp.message_handler(state=ProfileStatesGroup.city)
async def load_digit(message: types.Message, state: FSMContext) -> None:
    user_city = str(message.text)  # –ü–µ—Ä–µ–≤–µ–¥–µ–º –≤ —Å—Ç—Ä–æ–∫—É
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –µ—Å–ª–∏ –≤–≤–µ–ª —á–∏—Å–ª–æ –∏–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –≥–æ—Ä–æ–¥
    try:  # –í —Å–ª—É—á–∞–∏ —É—Å–ø–µ—Ö–∞
        print('user –Ω–∞–∑–≤–∞–ª –≥–æ—Ä–æ–¥:', user_city)  # –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
        s_city = f"{user_city},RU"
        res = requests.get("http://api.openweathermap.org/data/2.5/weather?",  # –ó–∞–ø—Ä–æ—Å —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
                           params={'q': s_city, 'lang': 'ru', 'APPID': APPID})
        data = res.json()
        temperature = int(data['main']['temp'] - 273.15)  # –≤–æ–∑—å–º–µ–º –∏–∑ json —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É
        weather = data['weather'][0]['description']  # –í–æ–∑—å–º–µ–º —Ç–µ–ø–µ—Ä—å –ø–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è
        await bot.send_message(message.chat.id, f"–ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–≥–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Ç–≤–æ–µ–≥–æ –≥–æ—Ä–æ–¥–∞..\n\n",
                               reply_markup=back)  # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ + –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤–µ—Ä–Ω—É—Ç—å—Å—è –ø–æ—Ç–æ–º –≤ –º–µ–Ω—é
        await asyncio.sleep(5)
        # –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –≤—ã–¥–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–º—Å –æ —Ç–æ–º, —á—Ç–æ —Ö–æ–ª–æ–¥–Ω–æ/—Ç–µ–ø–ª–æ/–ø—Ä–æ—Ö–ª–∞–¥–Ω–æ
        if temperature >= 10:
            await bot.send_message(message.chat.id, f"–°–µ–≥–æ–¥–Ω—è –≤–µ—Å—å–º–∞ —Ç–µ–ø–ª–æ - +{temperature}C\n\n"
                                                    f"–ó–∞ –±–æ—Ä—Ç–æ–º - {weather}\n\n")
        elif temperature < 10:
            await bot.send_message(message.chat.id, f"–°–µ–≥–æ–¥–Ω—è –ø—Ä–æ—Ö–ª–∞–¥–Ω–æ - +{temperature}C\n\n"
                                                    f"–ó–∞ –±–æ—Ä—Ç–æ–º - {weather}\n\n")
        elif temperature < 5:
            await bot.send_message(message.chat.id, f"–°–µ–≥–æ–¥–Ω—è —Ö–æ–ª–æ–¥–Ω–æ - +{temperature}C\n\n"
                                                    f"–ó–∞ –±–æ—Ä—Ç–æ–º - {weather}\n\n")
        elif temperature < 0:
            await bot.send_message(message.chat.id, f"–°–µ–≥–æ–¥–Ω—è –Ω–∏–∂–µ 0!! - -{temperature}C\n\n"
                                                    f"–ó–∞ –±–æ—Ä—Ç–æ–º - {weather}\n\n")
        await state.finish()
    # –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞
    except KeyError:
        await bot.send_message(message.chat.id, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥, –≤–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞!')
        await ProfileStatesGroup.city.set()


if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=False)
